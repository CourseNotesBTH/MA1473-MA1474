; Zilog eZ80 ANSI C Compiler Release 3.4
; -nomodsect -optspeed -noreduceopt -peephole -globalopt
; -localcse -const=ROM 
	FILE	"..\..\SRC\TEST\TEST.C"
	.assume ADL=1
	SEGMENT CODE
;    1	#include "test.h"
;    2	
;    3	#include "../shared/shared.h"
;    4	
;    5	void handleTest() {
_handleTest:
	LD	HL,-49
	CALL	__frameset
;    6	  char str[CHARACTER_WIDTH];
;    7	  char input[INPUT_SIZE];
;    8	
;    9	  /* number to test, room, exponent, found "roots" */
;   10	  uint24_t x = 0, n = 0, k = 1, ones = 0, temp1 = 0;
	LD	BC,0
	LD	(IX+-7),BC
	LD	(IX+-10),BC
	LD	(IX+-13),BC
	LD	(IX+-16),BC
;   11	
;   12	  uint8_t row = 0;
	LD	(IX+-1),0
;   13	
;   14	  os_GetStringInput("Enter number to test x: ", input, sizeof input);
	LD	BC,7
	PUSH	BC
	PEA	IX+-23
	LD	BC,L__0
	PUSH	BC
	CALL	_os_GetStringInput
	POP	BC
	POP	BC
	POP	BC
;   15	  x = atoi(input);
	PEA	IX+-23
	CALL	_atoi
	POP	BC
	LD	(IX+-7),HL
;   16	  os_ClrHome();
	LD	BC,_asm_ClrLCD
	PUSH	BC
	CALL	__OS
	POP	BC
	LD	BC,_asm_HomeUp
	PUSH	BC
	CALL	__OS
	POP	BC
	LD	BC,_asm_DrawStatusBar
	PUSH	BC
	CALL	__OS
	POP	BC
;   17	  os_GetStringInput("Enter room to test n: ", input, sizeof input);
	LD	BC,7
	PUSH	BC
	PEA	IX+-23
	LD	BC,L__1
	PUSH	BC
	CALL	_os_GetStringInput
	POP	BC
	POP	BC
	POP	BC
;   18	  n = atoi(input);
	PEA	IX+-23
	CALL	_atoi
	POP	BC
	LD	(IX+-10),HL
;   19	  os_ClrHome();
	LD	BC,_asm_ClrLCD
	PUSH	BC
	CALL	__OS
	POP	BC
	LD	BC,_asm_HomeUp
	PUSH	BC
	CALL	__OS
	POP	BC
	LD	BC,_asm_DrawStatusBar
	PUSH	BC
	CALL	__OS
	POP	BC
;   20	
;   21	  for (k = 1; k <= n; k++)Â {
	LD	BC,1
	LD	(IX+-4),BC
	JR	L_11
L_9:
;   22	    temp1 = moduloExponent(x, k, n);
	LD	BC,(IX+-10)
	PUSH	BC
	LD	BC,(IX+-4)
	PUSH	BC
	LD	BC,(IX+-7)
	PUSH	BC
	CALL	_moduloExponent
	POP	BC
	POP	BC
	POP	BC
	LD	(IX+-16),HL
;   23	    if (temp1 == 1)
	LD	BC,1
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_8
;   24	      ones++;
	LD	BC,(IX+-13)
	INC	BC
	LD	(IX+-13),BC
L_8:
;   25	    sprintf(str, "%u^%u=...=%u", x, k, temp1);
	LD	BC,(IX+-16)
	PUSH	BC
	LD	BC,(IX+-4)
	PUSH	BC
	LD	BC,(IX+-7)
	PUSH	BC
	LD	BC,L__3
	PUSH	BC
	PEA	IX+-49
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   26	    row = printLine(row, str);
	PEA	IX+-49
	LD	C,(IX+-1)
	LD	B,0
	PUSH	BC
	CALL	_printLine
	POP	BC
	POP	BC
	LD	(IX+-1),A
	LD	BC,(IX+-4)
	INC	BC
	LD	(IX+-4),BC
;   27	  }
L_11:
	LD	BC,(IX+-4)
	LD	HL,(IX+-10)
	OR	A,A
	SBC	HL,BC
	JR	NC,L_9
;   28	
;   29	  if (ones == 1) {
	LD	BC,1
	LD	HL,(IX+-13)
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_14
;   30	    sprintf(str, "%u is a root in Z%u", x, n);
	LD	BC,(IX+-10)
	PUSH	BC
	LD	BC,(IX+-7)
	PUSH	BC
	LD	BC,L__6
	PUSH	BC
	PEA	IX+-49
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   31	    row = printLine(row, str);
	PEA	IX+-49
	LD	C,(IX+-1)
	LD	B,0
	PUSH	BC
	CALL	_printLine
	POP	BC
	POP	BC
	LD	(IX+-1),A
;   32	  } else {
	JR	L_16
L_14:
;   33	    sprintf(str, "%u is not a root in Z%u", x, n);
	LD	BC,(IX+-10)
	PUSH	BC
	LD	BC,(IX+-7)
	PUSH	BC
	LD	BC,L__7
	PUSH	BC
	PEA	IX+-49
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   34	    row = printLine(row, str);
	PEA	IX+-49
	LD	C,(IX+-1)
	LD	B,0
	PUSH	BC
	CALL	_printLine
	POP	BC
	POP	BC
	LD	(IX+-1),A
;   35	  }
;   36	}
L_16:
	LD	SP,IX
	POP	IX
	RET	


;**************************** _handleTest ***************************
;Name                         Addr/Register   Size   Type
;_printLine                          IMPORT  -----   function
;_sprintf                            IMPORT  -----   function
;_moduloExponent                     IMPORT  -----   function
;_asm_DrawStatusBar                  IMPORT  -----   function
;_asm_HomeUp                         IMPORT  -----   function
;_asm_ClrLCD                         IMPORT  -----   function
;__OS                                IMPORT  -----   function
;_atoi                               IMPORT  -----   function
;_os_GetStringInput                  IMPORT  -----   function
;str                                  IX-49     26   variable
;input                                IX-23      7   variable
;temp1                                IX-16      3   variable
;ones                                 IX-13      3   variable
;n                                    IX-10      3   variable
;x                                     IX-7      3   variable
;k                                     IX-4      3   variable
;row                                   IX-1      1   variable


; Stack Frame Size: 55 (bytes)
;       Spill Code: 0 (instruction)


	SEGMENT STRSECT
L__0:
	DB	"Enter number to test x: "
	DB	0
L__1:
	DB	"Enter room to test n: "
	DB	0
L__3:
	DB	"%u^%u=...=%u"
	DB	0
L__6:
	DB	"%u is a root in Z%u"
	DB	0
L__7:
	DB	"%u is not a root in Z%u"
	DB	0
	XREF _moduloExponent:ROM
	XREF _printLine:ROM
	XREF _atoi:ROM
	XREF _sprintf:ROM
	XREF _asm_DrawStatusBar:ROM
	XREF _asm_ClrLCD:ROM
	XREF _asm_HomeUp:ROM
	XREF __OS:ROM
	XREF _os_GetStringInput:ROM
	XREF __frameset:ROM
	XDEF _handleTest
	END
